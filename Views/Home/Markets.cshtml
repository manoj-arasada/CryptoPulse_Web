@model CryptoPulse.Models.MarketsViewModel

<div class="container">
    <div class="row">
        <div class="col-12 mt-3">

            <!-- Dropdown for data selection -->
            <form asp-action="Markets" method="get">
                <select class="form-select" aria-label="Default select example" name="selectedValue" id="ddltype" name="coinID" asp-items="ViewBag.Types" onchange="document.getElementById('btnSubmit').click();">
                    <option selected disabled>Select a Crypto Currency to view its Markets</option>
                    @if (Model.Coins.Any())
                    {
                        @foreach (var coin in Model.Coins)
                        {
                            <option value="@coin.ID">@coin.Name</option>
                        }
                    }
                </select>
                <input id="btnSubmit" hidden type="submit" value="submit" />
            </form>


            <!-- Table to display fetched data -->
            <div class="table-responsive">
                <table class="table table-dark table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Base</th>
                            <th>Quote</th>
                            <th>Price</th>
                            <th>Price USD</th>
                            <th>Volume</th>
                            <th>Volume USD</th>
                            <th>Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Markets.Any())
                        {
                            @foreach (var item in Model.Markets)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Base)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Quote)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PriceUSD)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Volume)</td>
                                    <td>@Html.DisplayFor(modelItem => item.VolumeUSD)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Time)</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8">No data available</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!-- Include Bootstrap JavaScript from CDN -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Your custom script -->
<script>
    alertDbSave(@ViewBag.dbSuccessComp);
</script>
